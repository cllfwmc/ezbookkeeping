name: Build Mobile Apps with Capacitor

on:
  push:
    branches: [ apk_dispatch ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ apk_dispatch ]

jobs:
  build-android:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      # 1. 安装依赖
      - name: Install core dependencies
        run: npm install

      # 2. 安装并初始化 Capacitor
      - name: Install Capacitor CLI and plugins
        run: |
          npm install @capacitor/core@6.2.1 @capacitor/cli@6.2.1
          npm install @capacitor/android@6.2.1 @capacitor/ios@6.2.1 --save-dev
          npm install @capacitor/app@6.0.2 @capacitor/keyboard@6.0.2
          npx cap init ezbookkeeping com.example.ezbookkeeping --web-dir=dist --npm-client=npm --no-interactive || true

      # 3. 构建前端
      - name: Build web app
        run: npm run build

      # 4. 添加 Android 平台（如已存在不会报错）
      - name: Add Android platform
        run: npx cap add android || true

      - name: MANUALLY Replace Android Icons (100% Working)
        run: |
          # 安装图像处理工具
          sudo apt-get update && sudo apt-get install -y imagemagick

          # 创建所有必要的 Android 资源目录
          mkdir -p android/app/src/main/res/mipmap-{mdpi,hdpi,xhdpi,xxhdpi,xxxhdpi}

          # 生成方形图标（直接覆盖 Capacitor 默认图标）
          convert public/img/ezbookkeeping-512.png -resize 48x48   android/app/src/main/res/mipmap-mdpi/ic_launcher.png
          convert public/img/ezbookkeeping-512.png -resize 72x72   android/app/src/main/res/mipmap-hdpi/ic_launcher.png
          convert public/img/ezbookkeeping-512.png -resize 96x96   android/app/src/main/res/mipmap-xhdpi/ic_launcher.png
          convert public/img/ezbookkeeping-512.png -resize 144x144 android/app/src/main/res/mipmap-xxhdpi/ic_launcher.png
          convert public/img/ezbookkeeping-512.png -resize 192x192 android/app/src/main/res/mipmap-xxxhdpi/ic_launcher.png

          # 强制更新 AndroidManifest（确保使用新图标）
          sed -i 's/android:icon="@mipmap\/ic_launcher"/android:icon="@mipmap\/ic_launcher"/' android/app/src/main/AndroidManifest.xml

          # 验证生成的文件
          echo "✅ 生成的图标文件："
          find android/app/src/main/res/mipmap-* -name "ic_launcher*.png" | xargs ls -l

      # 6. 同步资源
      - name: Sync Android
        run: npx cap sync android

      # 7. 应用手势返回修复
      # - name: Apply Gesture Fix
      #   run: |
      #     MAIN_ACTIVITY_PATH="android/app/src/main/java/$(echo com.example.ezbookkeeping | sed 's/\./\//g')/MainActivity.java"
      #     if [ ! -f "$MAIN_ACTIVITY_PATH" ]; then
      #       echo "⚠️ MainActivity.java not found at $MAIN_ACTIVITY_PATH"
      #     else
      #       sed -i '/public class MainActivity extends BridgeActivity {/a \    @Override\n    public void onBackPressed() {\n        if (this.bridge.getWebView().canGoBack()) {\n            this.bridge.getWebView().goBack();\n        } else {\n            super.onBackPressed();\n        }\n    }' $MAIN_ACTIVITY_PATH
      #     fi
      #     MANIFEST_PATH="android/app/src/main/AndroidManifest.xml"
      #     if [ -f "$MANIFEST_PATH" ]; then
      #       sed -i '/<activity/a \        <meta-data android:name="android.window.layoutInDisplayCutoutMode" android:value="shortEdges" />' $MANIFEST_PATH
      #     fi

      # 8. 清理构建缓存
      - name: Clean Gradle Cache
        run: |
          cd android
          ./gradlew clean

      # 9. 构建 APK
      - name: Build Android APK
        run: |
          cd android
          ./gradlew assembleDebug

      # 10. 上传 APK
      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-debug
          path: android/app/build/outputs/apk/debug/app-debug.apk
          retention-days: 1