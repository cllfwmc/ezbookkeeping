name: Build Android APK

on:
  push:
    branches: [ apk_dispatch ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ apk_dispatch ]

jobs:
  build-android:
    runs-on: ubuntu-latest
    steps:
      # ---------- 基础环境 ----------
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      # ---------- 依赖 & 平台 ----------
      - name: Install core dependencies
        run: npm install

      - name: Install Capacitor CLI and plugins
        run: |
          npm install @capacitor/core@6.2.1 @capacitor/cli@6.2.1
          npm install @capacitor/android@6.2.1 @capacitor/ios@6.2.1 --save-dev
          npm install @capacitor/app@6.0.2 @capacitor/keyboard@6.0.2 @capacitor/splash-screen@6.0.2
          npx cap init ezbookkeeping com.example.ezbookkeeping --web-dir=dist --npm-client=npm --no-interactive || true

      - name: Build web app
        run: npm run build

      - name: Add Android platform
        run: npx cap add android || true

      # ---------- 替换图标 ----------
      - name: Replace Android Icons
        run: |
          sudo apt-get update && sudo apt-get install -y imagemagick

          ICON_SRC="resources/ezbookkeeping-512.png"
          echo "检查源图标文件:"
          ls -l "$ICON_SRC"
          file "$ICON_SRC"
          identify "$ICON_SRC"

          rm -rf android/app/src/main/res/mipmap-*
          mkdir -p android/app/src/main/res/mipmap-{mdpi,hdpi,xhdpi,xxhdpi,xxxhdpi}

          # 普通图标
          convert "$ICON_SRC" -resize 48x48   android/app/src/main/res/mipmap-mdpi/ic_launcher.png
          convert "$ICON_SRC" -resize 72x72   android/app/src/main/res/mipmap-hdpi/ic_launcher.png
          convert "$ICON_SRC" -resize 96x96   android/app/src/main/res/mipmap-xhdpi/ic_launcher.png
          convert "$ICON_SRC" -resize 144x144 android/app/src/main/res/mipmap-xxhdpi/ic_launcher.png
          convert "$ICON_SRC" -resize 192x192 android/app/src/main/res/mipmap-xxxhdpi/ic_launcher.png

          # 圆形图标（ic_launcher_round）
          convert "$ICON_SRC" -resize 48x48   android/app/src/main/res/mipmap-mdpi/ic_launcher_round.png
          convert "$ICON_SRC" -resize 72x72   android/app/src/main/res/mipmap-hdpi/ic_launcher_round.png
          convert "$ICON_SRC" -resize 96x96   android/app/src/main/res/mipmap-xhdpi/ic_launcher_round.png
          convert "$ICON_SRC" -resize 144x144 android/app/src/main/res/mipmap-xxhdpi/ic_launcher_round.png
          convert "$ICON_SRC" -resize 192x192 android/app/src/main/res/mipmap-xxxhdpi/ic_launcher_round.png

          # 清理 Gradle 缓存
          cd android && ./gradlew clean && cd ..

      # ---------- 同步 & 构建 ----------
      - name: Sync Android
        run: npx cap sync android


      # ---------- 增加 splash screen ----------
      - name: Add Splash Screen
        run: |
          # 1. 先清掉所有缓存目录
          rm -rf android/.gradle
          rm -rf ~/.gradle/caches
          rm -rf android/app/build
          rm -rf android/app/src/main/res/drawable-*
          rm -rf android/app/src/debug/res/drawable-* 2>/dev/null || true
          rm -rf android/app/src/release/res/drawable-* 2>/dev/null || true

          sudo apt-get update && sudo apt-get install -y imagemagick

          # 创建 drawable 目录
          rm -rf android/app/src/main/res/drawable-*
          mkdir -p android/app/src/main/res/drawable-mdpi
          mkdir -p android/app/src/main/res/drawable-hdpi
          mkdir -p android/app/src/main/res/drawable-xhdpi
          mkdir -p android/app/src/main/res/drawable-xxhdpi
          mkdir -p android/app/src/main/res/drawable-xxxhdpi

          # 正确分配不同分辨率到不同目录（避免重复覆盖）
          convert resources/splash_720x1280.png  android/app/src/main/res/drawable-mdpi/splash.png
          convert resources/splash_1080x1920.png android/app/src/main/res/drawable-hdpi/splash.png
          convert resources/splash_1080x2400.png android/app/src/main/res/drawable-xhdpi/splash.png
          convert resources/splash_1440x2560.png android/app/src/main/res/drawable-xxhdpi/splash.png
          convert resources/splash_1440x3120.png android/app/src/main/res/drawable-xxxhdpi/splash.png

          # ---------- 生成 launch_background.xml ----------
          cat > android/app/src/main/res/drawable/launch_background.xml <<'EOF'
          <?xml version="1.0" encoding="utf-8"?>
          <layer-list xmlns:android="http://schemas.android.com/apk/res/android">
              <item>
                  <shape android:shape="rectangle">
                      <solid android:color="@android:color/white" />
                  </shape>
              </item>
              <!-- 直接引用一个 selector/wrapper，不再用 bitmap 标签 -->
              <item android:drawable="@drawable/splash" android:gravity="center" />
          </layer-list>
          EOF
          
          # ---------- 生成 splash.xml（wrapper，让系统按密度去找） ----------
          cat > android/app/src/main/res/drawable/splash.xml <<'EOF'
          <?xml version="1.0" encoding="utf-8"?>
          <bitmap xmlns:android="http://schemas.android.com/apk/res/android"
              android:src="@drawable/splash_png"
              android:gravity="center" />
          EOF
          
          # ---------- 把真正的 png 改名成 splash_png.png ----------
          # 这样 @drawable/splash_png 就会去对应密度的目录找
          for density in mdpi hdpi xhdpi xxhdpi xxxhdpi; do
            mv android/app/src/main/res/drawable-${density}/splash.png \
               android/app/src/main/res/drawable-${density}/splash_png.png 2>/dev/null || true
          done

          # 创建 styles.xml
          cat > android/app/src/main/res/values/styles.xml <<'EOF'
          <resources>
              <style name="AppTheme" parent="Theme.AppCompat.Light.DarkActionBar">
                  <item name="colorPrimary">@color/colorPrimary</item>
                  <item name="colorPrimaryDark">@color/colorPrimaryDark</item>
                  <item name="colorAccent">@color/colorAccent</item>
              </style>

              <style name="LaunchTheme" parent="Theme.AppCompat.Light.NoActionBar">
                  <item name="android:windowBackground">@drawable/launch_background</item>
                  <item name="android:windowFullscreen">true</item>
              </style>
          </resources>
          EOF

          # 修改 AndroidManifest.xml 中的 theme
          sed -i 's/android:theme="@style\/AppTheme\.NoActionBarLaunch"/android:theme="@style\/LaunchTheme"/' android/app/src/main/AndroidManifest.xml

          # 清理 Gradle 缓存
          cd android && ./gradlew clean && cd ..

      - name: Build Android APK
        run: |
          cd android
          ./gradlew assembleDebug
          
      # ---------- 上传产物 ----------
      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-debug
          path: android/app/build/outputs/apk/debug/app-debug.apk
          retention-days: 1